version: '3.5'
services:
  api:
    build:
      dockerfile: ./api/Dockerfile
      context: .
    image: micm-project-match-api
    restart: unless-stopped
    networks:
      - micm-project-match-network
    container_name: micm-project-match-api
    volumes:
      - file-data:/var/micm/files
    depends_on:
      - db
      - redis
    environment:
      - NODE_ENV=production
      - NODE_PORT=3000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SESSION_SECRET=secret
      - POSTGRES_DB=micm
      - POSTGRES_HOST=db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_PORT=5432
      - FACEBOOK_CLIENT_ID=${FACEBOOK_CLIENT_ID}
      - FACEBOOK_CLIENT_SECRET=${FACEBOOK_CLIENT_SECRET}
      - FACEBOOK_CALLBACK_URL=/api/auth/facebook/callback
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CALLBACK_URL=/api/auth/google/callback
      - OAUTH_SUCCESS_REDIRECT=/
      - OAUTH_FAILURE_REDIRECT=/signin
      - STORAGE_PATH=/var/micm/files

  db:
    build:
      dockerfile: ./db/Dockerfile
      context: .
    image: micm-project-match-db
    restart: unless-stopped
    networks:
      - micm-project-match-network
    container_name: micm-project-match-db
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=micm
  redis:
    image: redis
    container_name: micm-project-match-redis
    restart: unless-stopped
    networks:
      - micm-project-match-network
    volumes:
      - redis-data:/data
  web:
    build:
      dockerfile: ./web/Dockerfile
      context: .
    image: micm-project-match-web
    restart: unless-stopped
    networks:
      - micm-project-match-network
    container_name: micm-project-match-web
    depends_on:
      - api
    ports:
      - 6001:80

networks:
  micm-project-match-network:
    driver: bridge
    name: micm-project-match-network

volumes:
  file-data:
  db-data:
  redis-data:
